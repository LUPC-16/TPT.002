<?xml version="1.0" encoding="utf-8"?>
<Activity mc:Ignorable="sap sap2010" x:Class="Excel_ParticionUUIDS" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Ruta" Type="InArgument(x:String)" />
    <x:Property Name="in_HojaUuid" Type="InArgument(x:String)" />
    <x:Property Name="in_RutaUuid" Type="InArgument(x:String)" />
  </x:Members>
  <this:Excel_ParticionUUIDS.in_Ruta>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_ParticionUUIDS.in_Ruta>
  <this:Excel_ParticionUUIDS.in_HojaUuid>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_ParticionUUIDS.in_HojaUuid>
  <this:Excel_ParticionUUIDS.in_RutaUuid>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_ParticionUUIDS.in_RutaUuid>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,1572</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_ParticionUUIDS_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="TPT.002.015 Partir archivos (4 megas)&#xA;&#xA;Descripcion: Una vez que se obiene el UUID, el Bot va partiendo el archivo si superar el limite de &quot;4 megas&quot;.&#xA;&#xA;" DisplayName="Excel_ParticionUUIDS" sap:VirtualizedContainerService.HintSize="1171,1507" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="RutaUuid" />
      <Variable x:TypeArguments="x:String" Name="NameExcel" />
      <Variable x:TypeArguments="x:Int32" Name="EnteroU" />
      <Variable x:TypeArguments="x:Double" Name="DivisionU" />
      <Variable x:TypeArguments="x:Int32" Name="RestoDecimalU" />
      <Variable x:TypeArguments="x:Boolean" Name="DividirU" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Uuids" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Dividir UUIDS" sap:VirtualizedContainerService.HintSize="1129,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Inicia:Excel_ParticionUUIDS&quot;]" />
    <Assign DisplayName="Obtener Ruta UUIDS" sap:VirtualizedContainerService.HintSize="1129,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[RutaUuid]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_Ruta)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Recorre carpeta de UUIDS" sap:VirtualizedContainerService.HintSize="1129,966" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[RutaUuid]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="File" />
          </ActivityAction.Argument>
          <Flowchart DisplayName="Particion de Archivos UUIDS" sap:VirtualizedContainerService.HintSize="1093,842" sap2010:WorkflowViewState.IdRef="Flowchart_1">
            <Flowchart.Variables>
              <Variable x:TypeArguments="x:Int32" Name="IndiceU" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">490,12.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">520,87.5 520,120</av:PointCollection>
                <x:Double x:Key="Width">1059</x:Double>
                <x:Double x:Key="Height">806.07999999999993</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID5</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">389,120</av:Point>
                  <av:Size x:Key="ShapeSize">262,60</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">520,180 520,216.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Obtiene el nombr del excel" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[NameExcel]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(File.Tostring)]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID0" Condition="[not (Path.GetFileName(File).Contains(&quot;~&quot;) or Path.GetFileName(File).Contains(&quot;$&quot;))]" DisplayName="Es un archivo temporal?" sap:VirtualizedContainerService.HintSize="132,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">454,216.5</av:Point>
                      <av:Size x:Key="ShapeSize">132,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">454,260 330,260 330,288</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">230,288</av:Point>
                          <av:Size x:Key="ShapeSize">200,64</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">330,352 330,394.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Delay sap2010:Annotation.AnnotationText="Se asigna tiempo para poder procesar los archivos excel." Duration="00:00:05" sap:VirtualizedContainerService.HintSize="200,64" sap2010:WorkflowViewState.IdRef="Delay_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Delay>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">230,394.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">330,445.5 330,486.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ObtenerTamaño workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Modulos\Excel\Excel_ObtenerTamanio.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_HojaUuid">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaUuid" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_NameExcel">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="NameExcel" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_DividirU">
                                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="DividirU" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_RestoDecimalU">
                                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="RestoDecimalU" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Double" x:Key="in_DivisionU">
                                <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="DivisionU" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Int32" x:Key="in_EnteroU">
                                <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="EnteroU" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_File">
                                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="File" />
                              </InArgument>
                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Uuids">
                                <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dt_Uuids" />
                              </OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID1" Condition="[NameExcel.Contains(&quot;UUIDS&quot;)]" DisplayName="Es un Arhivo UUIDS?" sap:VirtualizedContainerService.HintSize="113,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">273.5,486.5</av:Point>
                                  <av:Size x:Key="ShapeSize">113,87</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">273.5,530 160,530 160,594.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">60,594.5</av:Point>
                                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[DividirU]" DisplayName="Si los archivos superan el limite" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <ui:ForEach x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="" CurrentIndex="[IndiceU]" DisplayName="Recorre tamaño de tabla para dividir por archivos " sap:VirtualizedContainerService.HintSize="509,768" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Enumerable.Range(1,EnteroU).ToArray()]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="x:Int32">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="Repeticion" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Archivos Uuids" sap:VirtualizedContainerService.HintSize="473,613" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="sd:DataTable" Name="dt_TablaTemporal" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:MultipleAssign DisplayName="Obtiene el indice de la tabla " sap:VirtualizedContainerService.HintSize="431,131" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                                <ui:MultipleAssign.AssignOperations>
                                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="sd:DataTable">[dt_TablaTemporal]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="sd:DataTable">[if(IndiceU+1 = EnteroU,dt_Uuids.AsEnumerable.Skip(IndiceU*1000).Take(dt_Uuids.Rows.Count).CopyToDatatable(),dt_Uuids.AsEnumerable.Skip(IndiceU*1000).Take(1000).CopyToDatatable())]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[NameExcel]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">[in_RutaUuid+Path.GetFileNameWithoutExtension(File).ToString+"_Parte"+(IndiceU+1).ToString+".xlsx"]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                  </scg:List>
                                                </ui:MultipleAssign.AssignOperations>
                                              </ui:MultipleAssign>
                                              <Delay sap2010:Annotation.AnnotationText="Se anexan unos milisegundos para que el bot pueda procesar todos los archivos" DisplayName="Delay 3 segundos" Duration="00:00:03" sap:VirtualizedContainerService.HintSize="431,79" sap2010:WorkflowViewState.IdRef="Delay_2">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Delay>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ workflow" sap:VirtualizedContainerService.HintSize="431,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Modulos\Excel\Excel_EscribirExistentes.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_NameExcel">
                                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="NameExcel" />
                                                  </InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_HojaUuid">
                                                    <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_HojaUuid" />
                                                  </InArgument>
                                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_IndiceU">
                                                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="IndiceU" />
                                                  </InArgument>
                                                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_TablaTemporal">
                                                    <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_TablaTemporal" />
                                                  </InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <Delay sap2010:Annotation.AnnotationText="Se asigna tiempo para poder cerrar el excel para continuar con el sig. archivo" Duration="00:00:03" sap:VirtualizedContainerService.HintSize="431,79" sap2010:WorkflowViewState.IdRef="Delay_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Delay>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEach>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Copia datos " sap:VirtualizedContainerService.HintSize="476,641" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="ui:WorkbookApplication" Name="Excel" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Name del File" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[NameExcel]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[in_RutaUuid+Path.GetFileNameWithoutExtension(File).ToString+".xlsx"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Lectura de archivos excel" sap:VirtualizedContainerService.HintSize="434,449" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Visible="False" Workbook="[Excel]" WorkbookPath="[NameExcel]">
                                          <ui:ExcelApplicationScope.Body>
                                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Escribe y guarda cambios" sap:VirtualizedContainerService.HintSize="376,340" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:ExcelWriteRange AddHeaders="True" DataTable="[dt_Uuids]" DisplayName="Escribe en hoja TOTALPLAY" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_HojaUuid]" StartingCell="A1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:ExcelWriteRange>
                                                <ui:ExcelSaveWorkbook DisplayName="Guardar libro excel" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_2" />
                                                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[Excel]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ExcelApplicationScope.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelApplicationScope>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </FlowStep>
                              </FlowDecision.True>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <x:Reference>__ReferenceID4</x:Reference>
          </Flowchart>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message finaliza Dividir UUIDS" sap:VirtualizedContainerService.HintSize="1129,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Finaliza:Excel_ParticionUUIDS&quot;]" />
  </Sequence>
</Activity>