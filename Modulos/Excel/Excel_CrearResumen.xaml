<Activity mc:Ignorable="sap sap2010" x:Class="Excel_CrearResumen" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:be="clr-namespace:BalaReva.EasyDataTable;assembly=BalaReva.EasyDataTable" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Sheet" Type="InArgument(x:String)" />
    <x:Property Name="in_RutaResumen" Type="InArgument(x:String)" />
    <x:Property Name="in_RutaCobranza" Type="InArgument(x:String)" />
  </x:Members>
  <this:Excel_CrearResumen.in_Sheet>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_CrearResumen.in_Sheet>
  <this:Excel_CrearResumen.in_RutaResumen>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_CrearResumen.in_RutaResumen>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1166,10961</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_CrearResumen_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>BalaReva.EasyDataTable</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>BalaReva.EasyDataTable</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="TPT.002.016 Crear resume&#xA;El Bot realiza la suma de los totales de las siguientes columnas:&#xA;&#xA;IP_Monto + TP_Monto&#xA;IP_IEPS + TP_IEPS&#xA;IP_IVA + TP_IVA&#xA;&#xA;Estas sumas corresponden a los totales de TOTAL PLAY&#xA;&#xA;El ususario toma los totales de las siguientes columnas:&#xA;TB_Monto&#xA;TB_IEPS&#xA;TB_IVA (Siempre debe ser 0)&#xA;&#xA;Estos totales corresponden a TOTAL BOX&#xA;&#xA;El ususario toma los totales de las siguientes columnas:&#xA;HS_Monto&#xA;HS_IEPS&#xA;HS_IVA &#xA;&#xA;Estos totales corresponden a HOGAR SEGURO&#xA;&#xA;El ususario toma los totales de las siguientes columnas:&#xA;GO_Monto&#xA;GO_IEPS&#xA;GO_IVA &#xA;&#xA;Estos totales corresponden a TP GO" DisplayName="Excel_CrearResumen" sap:VirtualizedContainerService.HintSize="1176,10896" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="RutaPagos" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_SheetResumen" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="Close" />
      <Variable x:TypeArguments="x:Int32" Name="Indice" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message  inicia Crear Resumen" sap:VirtualizedContainerService.HintSize="1134,101" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Inicia:Excel_CrearResumen&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Assign DisplayName="Obtiene la ruta de archivos de Cobranza" sap:VirtualizedContainerService.HintSize="1134,70" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[RutaPagos]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(in_RutaCobranza)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[Indice]" DisplayName="RecorreRutas de pagos" sap:VirtualizedContainerService.HintSize="1134,989" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[RutaPagos]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="File" />
          </ActivityAction.Argument>
          <Flowchart DisplayName="Crear Resumen" sap:VirtualizedContainerService.HintSize="1098,855" sap2010:WorkflowViewState.IdRef="Flowchart_1">
            <Flowchart.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dt_TablaResumen" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_SalidaResumen" />
              <Variable x:TypeArguments="x:String" Name="NombreExcel" />
            </Flowchart.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">510,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">570,40 600,40 600,45 619,45</av:PointCollection>
                <x:Double x:Key="Height">809.04</x:Double>
                <x:Double x:Key="Width">1064</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID8</x:Reference>
            </Flowchart.StartNode>
            <FlowDecision x:Name="__ReferenceID5" Condition="[not (Path.GetFileName(File).Contains(&quot;~&quot;) or Path.GetFileName(File).Contains(&quot;$&quot;))]" DisplayName="Es un archivo temporal?" sap:VirtualizedContainerService.HintSize="132,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <av:Point x:Key="ShapeLocation">684,116.5</av:Point>
                  <av:Size x:Key="ShapeSize">132,87</av:Size>
                  <av:PointCollection x:Key="TrueConnector">684,160 540,160 540,226.5</av:PointCollection>
                  <av:PointCollection x:Key="FalseConnector">816,160 900,160 900,214.02</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowDecision.True>
                <FlowDecision x:Name="__ReferenceID0" Condition="[NombreExcel.Contains(&quot;PAGOS&quot;) and NombreExcel.Contains(&quot;USD&quot;)=False]" DisplayName="Contiene Pagos y USD?" sap:VirtualizedContainerService.HintSize="128,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">476,226.5</av:Point>
                      <av:Size x:Key="ShapeSize">128,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">476,270 350,270 350,334.5</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">604,270 720,270 720,324.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">250,334.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,61</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">350,395.5 350,429</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Abre archivo Pagos" sap:VirtualizedContainerService.HintSize="510,1181" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" Workbook="[Close]" WorkbookPath="Temporal\PAGOS_2022NOV\PAGOS_20220621_1.xlsx">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Genera tabla dinamica pra excel Resumen" sap:VirtualizedContainerService.HintSize="476,1062" sap2010:WorkflowViewState.IdRef="Sequence_2">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_Resumen" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Resumen]" DisplayName="Lee la hoja que corresponde " sap:VirtualizedContainerService.HintSize="434,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[in_Sheet]">
                                <ui:ExcelReadRange.Range>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:ExcelReadRange.Range>
                              </ui:ExcelReadRange>
                              <ui:RemoveDataRow Row="{x:Null}" DataTable="[dt_Resumen]" DisplayName="Remueve fila sumatorias" sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="RemoveDataRow_1" RowIndex="[dt_Resumen.Rows.Count-1]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:RemoveDataRow>
                              <ui:RemoveDataRow Row="{x:Null}" DataTable="[dt_Resumen]" DisplayName="Remove filas validaiones " sap:VirtualizedContainerService.HintSize="434,195" sap2010:WorkflowViewState.IdRef="RemoveDataRow_2" RowIndex="[dt_Resumen.Rows.Count-1]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:RemoveDataRow>
                              <ui:BuildDataTable DataTable="[dt_TablaResumen]" DisplayName="Genera una tabla " sap:VirtualizedContainerService.HintSize="434,69" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Etiquetas_de_Fila&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_MONTO_PAGO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_IP_MONTO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_IP_IEPS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_IP_IVA&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TB_MONTO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TB_IEPS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TB_IVA&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TP_MONTO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TP_IEPS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TP_IVA&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_HS_MONTO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_HS_IEPS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_HS_IVA&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_GO_MONTO&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_GO_IEPS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_GO_IVA&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_TERCEROS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Suma_de_PENDIENTE&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                              <ui:FilterDataTable DataTable="[dt_Resumen]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="434,170" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_Resumen]" SelectColumnsMode="Keep">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:Int32">[(7)]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                              </ui:FilterDataTable>
                              <Assign DisplayName="Obtiene tabla dinamica de Resumen" sap:VirtualizedContainerService.HintSize="434,74" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[dt_TablaResumen]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From row In dt_Resumen.AsEnumerable
Group row By Key = New With{
Key.Etiquetas_de_Fila= row.Item("EMPRESA")
}Into grp = Group
Select dt_TablaResumen.LoadDataRow(New Object(){
	key.Etiquetas_de_Fila,
	grp.Sum(Function (x) CDbl(x(7).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(9).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(10).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(11).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(12).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(13).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(14).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(15).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(16).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(17).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(18).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(19).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(20).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(21).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(22).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(23).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(24).toString.Trim)),
	grp.Sum(Function (x) CDbl(x(25).toString.Trim))
	},True)).OrderBy(Function(row) row.item("Etiquetas_de_Fila")).CopyToDataTable]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelApplicationScope>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">250,429</av:Point>
                              <av:Size x:Key="ShapeSize">200,32</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">350,461 350,494.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <be:ColumnDataTypeConvertor ColumnName="{x:Null}" NullValue="{x:Null}" ColumnDataType="x:Double" ColumnIndex="[{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17}]" DisplayName="Change Column DataType" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="ColumnDataTypeConvertor_1" InDataTable="[dt_TablaResumen]" OutDataTable="[dt_SalidaResumen]" />
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">250,494.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,61</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">350,555.5 350,584.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:AppendRange DataTable="[dt_SalidaResumen]" DisplayName="Copia las tablas dinamicas a nuevo excel Resumen Pagos " sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="[in_Sheet]" WorkbookPath="[in_RutaResumen]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AppendRange>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">250,584.5</av:Point>
                                      <av:Size x:Key="ShapeSize">200,61</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ClearDataTable DataTable="[dt_TablaResumen]" DisplayName="Limpia la tabla Resumen" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="ClearDataTable_1">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ClearDataTable>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">620,324.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,61</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Es un archivo UUIDS" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Es un archivo UUIDS&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">800,214.02</av:Point>
                      <av:Size x:Key="ShapeSize">200,61</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Es un archivo temporal" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Es un archivo temporal&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <x:Reference>__ReferenceID4</x:Reference>
            <FlowStep x:Name="__ReferenceID8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">619,10</av:Point>
                  <av:Size x:Key="ShapeSize">262,70</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">750,80 750,116.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Asigna nombre de excel" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[NombreExcel]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(File.Tostring)]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <FlowStep.Next>
                <x:Reference>__ReferenceID5</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID6</x:Reference>
            <x:Reference>__ReferenceID7</x:Reference>
          </Flowchart>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1134,142" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="Excel.exe" />
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Lectura de Archivos excel" sap:VirtualizedContainerService.HintSize="1134,3805" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" Workbook="[Close]" WorkbookPath="[in_RutaResumen]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Obtiene nombre de las hojas de archivo excel" sap:VirtualizedContainerService.HintSize="546,3686" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="SheetsResumen" />
              <Variable x:TypeArguments="x:Boolean" Name="ExisteHoja" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Obtener hojas del libro Resumen" sap:VirtualizedContainerService.HintSize="484,32" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[SheetsResumen]" />
            <Assign DisplayName="Existe hoja igual a falso" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[ExisteHoja]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="recorre hojas a procesar" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[SheetsResumen]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="Lista" />
                  </ActivityAction.Argument>
                  <If Condition="[Lista.ToString.ToUpper.Equals(in_Sheet.ToUpper)]" DisplayName="Si la lista es igual al nombre del as hojas" sap:VirtualizedContainerService.HintSize="484,246" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="Existe hoja a verdadero" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ExisteHoja]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[ExisteHoja]" DisplayName="Si existe hoja procede a realizar sumatorias" sap:VirtualizedContainerService.HintSize="484,3100" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Escribe sumatorias en hoja MX y MXNORTE" sap:VirtualizedContainerService.HintSize="400,2904" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="TamMx" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_SheetResumen]" DisplayName="Lectura de hoja MX y MXNORTE" sap:VirtualizedContainerService.HintSize="338,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[in_Sheet]">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <Assign DisplayName="Obtiene el tamaño de la tabla " sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[TamMx]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt_SheetResumen.Rows.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamMx+2).ToString]" DisplayName="Escribe Total" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[in_Sheet]" Text="TOTAL" />
                  <ui:ExcelWriteCell Cell="[&quot;B&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria monto_pago" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[in_Sheet]" Text="[&quot;=SUM(B2:B&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;C&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria IP_MONTO" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="[in_Sheet]" Text="[&quot;=SUM(C2:C&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;D&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria IP_IEPS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[in_Sheet]" Text="[&quot;=SUM(D2:D&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;E&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria IP_IVA" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="[in_Sheet]" Text="[&quot;=SUM(E2:E&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;F&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TB_Monto" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="[in_Sheet]" Text="[&quot;=SUM(F2:F&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;G&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TB_IEPS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[in_Sheet]" Text="[&quot;=SUM(G2:G&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;H&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TB_IVA" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[in_Sheet]" Text="[&quot;=SUM(H2:H&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;I&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TP_Monto" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[in_Sheet]" Text="[&quot;=SUM(I2:I&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;J&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TP_IEPS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[in_Sheet]" Text="[&quot;=SUM(J2:J&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;K&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TP_IVA" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[in_Sheet]" Text="[&quot;=SUM(K2:K&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;L&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria HS_MONTO" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[in_Sheet]" Text="[&quot;=SUM(L2:L&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria HS_IEPS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[in_Sheet]" Text="[&quot;=SUM(M2:M&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;N&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria HS_IVA" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[in_Sheet]" Text="[&quot;=SUM(N2:N&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;O&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria GO_MONTO" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[in_Sheet]" Text="[&quot;=SUM(O2:O&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;P&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria GO_IEPS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[in_Sheet]" Text="[&quot;=SUM(P2:P&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;Q&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria GO_IVA" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[in_Sheet]" Text="[&quot;=SUM(Q2:Q&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;R&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria TERCEROS" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[in_Sheet]" Text="[&quot;=SUM(R2:R&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                  <ui:ExcelWriteCell Cell="[&quot;S&quot;+( TamMx+2).ToString]" DisplayName="Sumatoria PENDIENTES" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[in_Sheet]" Text="[&quot;=SUM(S2:S&quot;+(TamMx+1).ToString+&quot;)&quot;]" />
                </Sequence>
              </If.Then>
            </If>
            <ui:ExcelSaveWorkbook DisplayName="Guardar libro" sap:VirtualizedContainerService.HintSize="484,32" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
            <ui:ExcelCloseWorkbook DisplayName="Cerrar libro" sap:VirtualizedContainerService.HintSize="484,69" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[Close]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelCloseWorkbook>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Lectura de Archivos excel crear resumen" sap:VirtualizedContainerService.HintSize="1134,5358" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" Workbook="[Close]" WorkbookPath="[in_RutaResumen]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Obtiene nombre de las hojas de archivo excel" sap:VirtualizedContainerService.HintSize="939,5239" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:List(x:String)" Name="SheetsResumen" />
              <Variable x:TypeArguments="x:Boolean" Name="ExisteHoja" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelGetWorkbookSheets DisplayName="Obtener hojas del libro de Resumen" sap:VirtualizedContainerService.HintSize="877,32" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_3" Sheets="[SheetsResumen]" />
            <Assign DisplayName="Asigna Existe hoja a falso" sap:VirtualizedContainerService.HintSize="877,70" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[ExisteHoja]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Recorre la lista de las hoja de excel REsumen" sap:VirtualizedContainerService.HintSize="877,399" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[SheetsResumen]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="Lista" />
                  </ActivityAction.Argument>
                  <If Condition="[Lista.ToString.ToUpper.Equals(in_Sheet.ToUpper)]" DisplayName="Si la lista es igual al nombre del as hojas" sap:VirtualizedContainerService.HintSize="484,266" sap2010:WorkflowViewState.IdRef="If_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="Existe hoja a verdadero" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[ExisteHoja]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[ExisteHoja]" DisplayName="Si existe hoja procede a realizar sumatorias" sap:VirtualizedContainerService.HintSize="877,4335" sap2010:WorkflowViewState.IdRef="If_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Escribe sumatorias en hoja MX y MXNORTE" sap:VirtualizedContainerService.HintSize="841,4139" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="IpMonto" />
                    <Variable x:TypeArguments="x:Double" Name="TpMonto" />
                    <Variable x:TypeArguments="x:Double" Name="IpIeps" />
                    <Variable x:TypeArguments="x:Double" Name="TpIeps" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dt_SumTabla" />
                    <Variable x:TypeArguments="x:Double" Name="IpIva" />
                    <Variable x:TypeArguments="x:Double" Name="TpIva" />
                    <Variable x:TypeArguments="x:Double" Name="TbMonto" />
                    <Variable x:TypeArguments="x:Double" Name="TbIva" />
                    <Variable x:TypeArguments="x:Int32" Name="TamaSum" />
                    <Variable x:TypeArguments="x:Double" Name="TbIeps" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_SumTabla]" DisplayName="Lectura de hoja MX y MXNORTE" sap:VirtualizedContainerService.HintSize="779,69" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="[in_Sheet]">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <Assign DisplayName="Obtiene tamaño de la tabla Mx y MxNorte" sap:VirtualizedContainerService.HintSize="779,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[TamaSum]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt_SumTabla.Rows.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:MultipleAssign DisplayName="Obtiene las sumatorias de las columnas necesarias" sap:VirtualizedContainerService.HintSize="779,358" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[IpMonto]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de IP_MONTO").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TpMonto]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TP_MONTO").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[IpIeps]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de IP_IEPS").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TpIeps]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TP_IEPS").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[IpIva]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de IP_IVA").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TpIva]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TP_IVA").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TbMonto]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TB_MONTO").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TbIva]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TB_IVA").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:Double">[TbIeps]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:Double">[dt_SheetResumen.AsEnumerable.Sum(Function(x)CDbl(x("Suma de TB_IEPS").ToString.Trim))]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+3).ToString]" DisplayName="Coloca Monto TP" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_43" SheetName="[in_Sheet]" Text="Monto TP" />
                  <ui:ExcelWriteCell Cell="[&quot;C&quot;+( TamaSum+3).ToString]" DisplayName="Sumatoria de IPMonto" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_44" SheetName="[in_Sheet]" Text="[IpMonto.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;I&quot;+( TamaSum+3).ToString]" DisplayName="Sumatoria de TpMonto" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_45" SheetName="[in_Sheet]" Text="[TpMonto.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+3).ToString]" DisplayName="Sumatoria IpMonto+ TpMonto" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_46" SheetName="[in_Sheet]" Text="[(IpMonto+TpMonto).ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+4).ToString]" DisplayName="Coloca IEPS TP" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_47" SheetName="[in_Sheet]" Text="IEPS TP" />
                  <ui:ExcelWriteCell Cell="[&quot;D&quot;+( TamaSum+4).ToString]" DisplayName="Sumatoria IpIeps" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_48" SheetName="[in_Sheet]" Text="[IpIeps.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;J&quot;+( TamaSum+4).ToString]" DisplayName="Sumatoria TpIeps" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_49" SheetName="[in_Sheet]" Text="[TpIeps.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+4).ToString]" DisplayName="Sumatoria IpIeps+TpIeps" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_50" SheetName="[in_Sheet]" Text="[(IpIeps+TpIeps).ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+5).ToString]" DisplayName="Coloca IVA TP" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_51" SheetName="[in_Sheet]" Text="IVA TP" />
                  <ui:ExcelWriteCell Cell="[&quot;E&quot;+( TamaSum+5).ToString]" DisplayName="Sumatoria IpIva" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_52" SheetName="[in_Sheet]" Text="[IpIva.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;K&quot;+( TamaSum+5).ToString]" DisplayName="Sumatoria TpIva" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_53" SheetName="[in_Sheet]" Text="[TpIva.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+5).ToString]" DisplayName="Sumatoria IpIva+TpIva" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_54" SheetName="[in_Sheet]" Text="[(IpIva+TpIva).ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+8).ToString]" DisplayName="Colca Monto TB" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_55" SheetName="[in_Sheet]" Text="MONTO TB" />
                  <ui:ExcelWriteCell Cell="[&quot;F&quot;+( TamaSum+8).ToString]" DisplayName="Sumatoria TbMonto" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_56" SheetName="[in_Sheet]" Text="[TbMonto.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+8).ToString]" DisplayName="Sumatoria IpMonto+TbMonto" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_57" SheetName="[in_Sheet]" Text="[(IpMonto+TbMonto).ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+9).ToString]" DisplayName="Sumatoria IEPS TB" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_58" SheetName="[in_Sheet]" Text="IEPS TB" />
                  <ui:ExcelWriteCell Cell="[&quot;G&quot;+( TamaSum+9).ToString]" DisplayName="Sumatoria TbIeps" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_59" SheetName="[in_Sheet]" Text="[TbIeps.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+9).ToString]" DisplayName="Sumatoria TpIeps" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_60" SheetName="[in_Sheet]" Text="[TpIeps.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;A&quot;+( TamaSum+10).ToString]" DisplayName="Coloca IVA TB" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_61" SheetName="[in_Sheet]" Text="IVA TB" />
                  <ui:ExcelWriteCell Cell="[&quot;H&quot;+( TamaSum+10).ToString]" DisplayName="Sumatoria TbIva" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_62" SheetName="[in_Sheet]" Text="[TbIva.ToString]" />
                  <ui:ExcelWriteCell Cell="[&quot;M&quot;+( TamaSum+10).ToString]" DisplayName="Sumatoria IpIva+TbIva" sap:VirtualizedContainerService.HintSize="779,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_63" SheetName="[in_Sheet]" Text="[(IpIva+TbIva).ToString]" />
                  <If Condition="[in_Sheet.Equals(&quot;MX&quot;)]" DisplayName="Si la hoja es MX coloca el 16%" sap:VirtualizedContainerService.HintSize="779,523" sap2010:WorkflowViewState.IdRef="If_7">
                    <If.Then>
                      <Sequence DisplayName="Validacion 16%" sap:VirtualizedContainerService.HintSize="400,356" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="[&quot;N&quot;+( TamaSum+4).ToString]" DisplayName="Sumatoria IpIeps" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_64" SheetName="[in_Sheet]" Text="[(IpMonto+TpMonto+IpIeps+TpIeps).ToString]" />
                        <ui:ExcelWriteCell Cell="[&quot;O&quot;+( TamaSum+4).ToString]" DisplayName="Sumatoria IpIeps" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_65" SheetName="[in_Sheet]" Text="[(IpMonto+TpMonto+IpIeps+TpIeps*.16).ToString]" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log Message No existe hoja MX" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;No es hoja MX&quot;]" />
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <ui:ExcelSaveWorkbook DisplayName="Guardar libro archivos" sap:VirtualizedContainerService.HintSize="833,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_3" />
            <ui:ExcelCloseWorkbook DisplayName="Cerrar libro archivos " sap:VirtualizedContainerService.HintSize="833,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[Close]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelCloseWorkbook>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:LogMessage DisplayName="Log Message  finaliza Crear Resumen" sap:VirtualizedContainerService.HintSize="1134,101" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Finaliza:Excel_CrearResumen&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>